{"ast":null,"code":"import Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport Home from '../views/Home.vue';\nimport User from '../views/User.vue';\nimport Main from '../views/Main.vue';\nimport Mall from '../views/Mall.vue';\nimport PageOne from '../views/PageOne.vue';\nimport PageTwo from '../views/PageTwo.vue';\nimport Login from '../views/Login.vue';\nVue.use(VueRouter);\n\n// 1、创建路由组件,src/views/*.vue\n\n// 2、将路由与组件进行映射\nconst routes = [\n// 主路由\n{\n  path: '/',\n  component: Main,\n  name: 'Main',\n  redirect: '/home',\n  //重定向到home页面\n  children: [\n    // // 子路由，嵌套路由\n    // { path: 'home', name: 'home', component: Home }, //首页\n    // { path: 'user', name: 'user', component: User }, //用户管理\n    // { path: 'mall', name: 'mall', component: Mall }, //商品管理\n    // { path: 'Page1', name: 'page1', component: PageOne }, //页面1\n    // { path: 'Page2', name: 'page2', component: PageTwo }, //页面2\n  ]\n}, {\n  path: '/login',\n  name: 'login',\n  component: Login\n}];\n\n// 3、创建router实例\nconst router = new VueRouter({\n  routes // (缩写) 相当于 routes: routes\n});\n\n// 路由守卫:全局前置导航守卫\n// router.beforeEach((to, from, next) => {\n//   // 获取token\n//   const token = Cookie.get('token')\n\n//   if (!token && to.name !== 'login') {\n//       next({ name: 'login' })\n//   } else if (token && to.name === 'login') {\n//       next({ name: 'home' })\n//   } else {\n//       next()\n//   }\n// })\n\nconst originalPush = VueRouter.prototype.push;\nVueRouter.prototype.push = function push(location) {\n  return originalPush.call(this, location).catch(err => err);\n};\n\n// 暴露路由\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","Home","User","Main","Mall","PageOne","PageTwo","Login","use","routes","path","component","name","redirect","children","router","originalPush","prototype","push","location","call","catch","err"],"sources":["D:/git/vue2-admin-site/src/router/index.js"],"sourcesContent":["import Vue from 'vue'\r\nimport VueRouter from 'vue-router'\r\nimport Home from '../views/Home.vue'\r\nimport User from '../views/User.vue'\r\nimport Main from '../views/Main.vue'\r\nimport Mall from '../views/Mall.vue'\r\nimport PageOne from '../views/PageOne.vue'\r\nimport PageTwo from '../views/PageTwo.vue'\r\nimport Login from '../views/Login.vue'\r\n\r\nVue.use(VueRouter)\r\n\r\n\r\n// 1、创建路由组件,src/views/*.vue\r\n\r\n// 2、将路由与组件进行映射\r\nconst routes = [\r\n  // 主路由\r\n  {\r\n    path: '/',\r\n    component: Main,\r\n    name: 'Main',\r\n    redirect: '/home', //重定向到home页面\r\n    children: [\r\n      // // 子路由，嵌套路由\r\n      // { path: 'home', name: 'home', component: Home }, //首页\r\n      // { path: 'user', name: 'user', component: User }, //用户管理\r\n      // { path: 'mall', name: 'mall', component: Mall }, //商品管理\r\n      // { path: 'Page1', name: 'page1', component: PageOne }, //页面1\r\n      // { path: 'Page2', name: 'page2', component: PageTwo }, //页面2\r\n    ]\r\n  },\r\n  {\r\n    path: '/login',\r\n    name: 'login',\r\n    component: Login\r\n  }\r\n]\r\n\r\n// 3、创建router实例\r\nconst router = new VueRouter({\r\n  routes // (缩写) 相当于 routes: routes\r\n})\r\n\r\n// 路由守卫:全局前置导航守卫\r\n// router.beforeEach((to, from, next) => {\r\n//   // 获取token\r\n//   const token = Cookie.get('token')\r\n\r\n//   if (!token && to.name !== 'login') {\r\n//       next({ name: 'login' })\r\n//   } else if (token && to.name === 'login') {\r\n//       next({ name: 'home' })\r\n//   } else {\r\n//       next()\r\n//   }\r\n// })\r\n\r\nconst originalPush = VueRouter.prototype.push\r\nVueRouter.prototype.push = function push(location) {\r\n    return originalPush.call(this, location).catch(err => err)\r\n}\r\n\r\n// 暴露路由\r\nexport default router\r\n\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,KAAK,MAAM,oBAAoB;AAEtCR,GAAG,CAACS,GAAG,CAACR,SAAS,CAAC;;AAGlB;;AAEA;AACA,MAAMS,MAAM,GAAG;AACb;AACA;EACEC,IAAI,EAAE,GAAG;EACTC,SAAS,EAAER,IAAI;EACfS,IAAI,EAAE,MAAM;EACZC,QAAQ,EAAE,OAAO;EAAE;EACnBC,QAAQ,EAAE;IACR;IACA;IACA;IACA;IACA;IACA;EAAA;AAEJ,CAAC,EACD;EACEJ,IAAI,EAAE,QAAQ;EACdE,IAAI,EAAE,OAAO;EACbD,SAAS,EAAEJ;AACb,CAAC,CACF;;AAED;AACA,MAAMQ,MAAM,GAAG,IAAIf,SAAS,CAAC;EAC3BS,MAAM,CAAC;AACT,CAAC,CAAC;;AAEF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMO,YAAY,GAAGhB,SAAS,CAACiB,SAAS,CAACC,IAAI;AAC7ClB,SAAS,CAACiB,SAAS,CAACC,IAAI,GAAG,SAASA,IAAIA,CAACC,QAAQ,EAAE;EAC/C,OAAOH,YAAY,CAACI,IAAI,CAAC,IAAI,EAAED,QAAQ,CAAC,CAACE,KAAK,CAACC,GAAG,IAAIA,GAAG,CAAC;AAC9D,CAAC;;AAED;AACA,eAAeP,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}