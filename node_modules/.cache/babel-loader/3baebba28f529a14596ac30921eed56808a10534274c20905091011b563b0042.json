{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getData } from '../api';\nimport * as echarts from 'echarts';\nexport default {\n  data() {\n    return {\n      tableData: [],\n      tabelLabel: {\n        name: '课程',\n        todayBuy: '今日购买',\n        monthBuy: '本月购买',\n        totalBuy: '总购买'\n      },\n      countData: [{\n        name: '今日支付订单',\n        value: 1234,\n        icon: 'success',\n        color: '#2ec7c9'\n      }, {\n        name: '今日收藏订单',\n        value: 234,\n        icon: 'star-on',\n        color: '#ffb980'\n      }, {\n        name: '今日未支付订单',\n        value: 1234,\n        icon: 's-goods',\n        color: '#5ab1ef'\n      }, {\n        name: '本月支付订单',\n        value: 1234,\n        icon: 'success',\n        color: '#2ec7c9'\n      }, {\n        name: '本月收藏订单',\n        value: 234,\n        icon: 'star-on',\n        color: '#ffb980'\n      }, {\n        name: '本月未支付订单',\n        value: 1234,\n        icon: 's-goods',\n        color: '#5ab1ef'\n      }]\n    };\n  },\n  mounted() {\n    // getData().then((data) => {\n    getData().then(({\n      data\n    }) => {\n      // console.log(data)\n      const {\n        tableData\n      } = data.data;\n      this.tableData = tableData;\n      console.log(tableData);\n\n      // 基于准备好的dom，初始化echarts实例\n      const echarts1 = echarts.init(this.$refs.echarts1);\n      // 指定图表的配置项和数据\n      var echarts1Option = {};\n      // 处理数据xAxis\n      const {\n        orderData\n      } = data.data;\n      const xAxis = Object.keys(orderData.data[0]);\n      const xAxisData = {\n        data: xAxis\n      };\n      echarts1Option.xAxis = xAxisData;\n      echarts1Option.legend = xAxisData;\n      echarts1Option.yAxis = {};\n      // console.log(xAxis)\n      echarts1Option.series = [];\n      // 配置series\n      xAxis.forEach(key => {\n        echarts1Option.series.push({\n          name: key,\n          // 折线图\n          type: 'line',\n          // key对应的orderData的所有值\n          data: orderData.data.map(item => item[key])\n        });\n      });\n      console.log(echarts1Option);\n      // 使用刚指定的配置项和数据显示图表\n      echarts1.setOption(echarts1Option);\n\n      // // 柱状图\n      // const echarts2 = echarts.init(this.$refs.echarts2)\n      // const echarts2Option  = {\n      //   legend: {\n      //     // 图例文字颜色\n      //     textStyle: {\n      //       color: \"#333\",\n      //     },\n      //   },\n      //   grid: {\n      //     left: \"20%\"\n      //   },\n      //   // 提示框\n      //   tooltip: {\n      //     trigger: \"axis\",\n      //   },\n      //   xAxis: {\n      //     type: \"category\", // 类目轴\n      //     data: userData.map(item => item.date),\n      //     axisLine: {\n      //       lineStyle: {\n      //         color: \"#17b3a3\",\n      //       },\n      //     },\n      //     axisLabel: {\n      //         interval: 0,\n      //         color: \"#333\",\n      //     },\n      //   },\n      //   yAxis: [\n      //     {\n      //       type: \"value\",\n      //       axisLine: {\n      //         lineStyle: {\n      //           color: \"#17b3a3\",\n      //         },\n      //       },\n      //     },\n      //   ],\n      //   color: [\"#2ec7c9\", \"#b6a2de\"],\n      //   series: [\n      //     {\n      //       name: \"新增用户\",\n      //       data: userData.map(item => item.new),\n      //       // 类型:bar是柱状图 \n      //       type: \"bar\",\n      //     },\n      //     {\n      //       name: \"活跃用户\",\n      //       data: userData.map(item => item.active),\n      //       type: \"bar\",\n      //     }\n      //   ],\n      // }\n      // echarts2.setOption(echarts2Option);\n    });\n  }\n};","map":{"version":3,"names":["getData","echarts","data","tableData","tabelLabel","name","todayBuy","monthBuy","totalBuy","countData","value","icon","color","mounted","then","console","log","echarts1","init","$refs","echarts1Option","orderData","xAxis","Object","keys","xAxisData","legend","yAxis","series","forEach","key","push","type","map","item","setOption"],"sources":["src/views/Home.vue"],"sourcesContent":["<template>\r\n    <el-row>\r\n      <el-col :span=\"8\" >\r\n        <el-card>\r\n          <div class=\"user\">\r\n            <img src=\"../assets/images/v-logo.png\" alt=\"\">\r\n            <div class=\"userinfo\">\r\n              <p class=\"name\">Admin</p>\r\n              <p class=\"access\">超级管理员</p>\r\n            </div>\r\n          </div>\r\n          <div class=\"login-info\">\r\n            <p>上次登录时间：<span>2024-01-01</span></p>\r\n            <p>上次登录地点：<span>上海</span></p>\r\n          </div>\r\n        </el-card>\r\n        <el-card style=\"margin-top: 10px;\" >\r\n          <el-table\r\n            :data=\"tableData\"\r\n            style=\"width: 100%;\">\r\n            <!-- <el-table-column\r\n              prop=\"name\"\r\n              label=\"课程\">\r\n            </el-table-column>\r\n            <el-table-column\r\n              prop=\"todayBuy\"\r\n              label=\"今日购买\">\r\n            </el-table-column>\r\n            <el-table-column\r\n              prop=\"monthBuy\"\r\n              label=\"本月购买\">\r\n            </el-table-column>\r\n            <el-table-column\r\n              prop=\"totalBuy\"\r\n              label=\"总购买\">\r\n            </el-table-column> -->\r\n            <el-table-column v-for=\"(val, key) in tabelLabel\"  :key=\"key\" :prop=\"key\" :label=\"val\" />\r\n          </el-table>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"16\">\r\n        <div class=\"num\">\r\n          <el-card v-for=\"items in countData\" :key=\"items.name\" :body-style=\"{ display: 'flex', padding: 0, }\">\r\n            <i class=\"icon\" :class=\"`el-icon-${items.icon}`\" :style=\"{ background: items.color }\"></i>\r\n            <div class=\"detail\">\r\n              <p class=\"price\">¥{{ items.value }}</p>\r\n              <p class=\"desc\">{{ items.name }}</p>\r\n            </div>\r\n          </el-card>\r\n        </div>\r\n        <!-- echarts图表 -->\r\n        <div style=\"margin-left:20px\">\r\n          <!-- 折线图 -->\r\n          <el-card style=\"height: 200px;\">\r\n            <div ref=\"echarts1\" style=\"height: 200px;\"></div>\r\n          </el-card>\r\n          <div class=\"graph\">\r\n            <!-- 柱状图 -->\r\n            <el-card ref=\"echarts2\" style=\"height: 180px;\"></el-card>\r\n            <!-- 饼状图 -->\r\n            <el-card ref=\"echarts3\" style=\"height: 180px;\"></el-card>\r\n          </div>\r\n        </div>\r\n      </el-col>\r\n    </el-row>\r\n</template>\r\n<script>\r\nimport { getData } from '../api'\r\nimport * as echarts from 'echarts'\r\nexport default{\r\n  data() {\r\n    return {\r\n      tableData: [],\r\n      tabelLabel: {\r\n        name: '课程',\r\n        todayBuy: '今日购买',\r\n        monthBuy: '本月购买',\r\n        totalBuy: '总购买',\r\n      },\r\n      countData: [\r\n        {\r\n          name: '今日支付订单',\r\n          value: 1234,\r\n          icon: 'success',\r\n          color: '#2ec7c9'\r\n        },\r\n        {\r\n          name: '今日收藏订单',\r\n          value: 234,\r\n          icon: 'star-on',\r\n          color: '#ffb980'\r\n        },\r\n        {\r\n          name: '今日未支付订单',\r\n          value: 1234,\r\n          icon: 's-goods',\r\n          color: '#5ab1ef'\r\n        },\r\n        {\r\n          name: '本月支付订单',\r\n          value: 1234,\r\n          icon: 'success',\r\n          color: '#2ec7c9'\r\n        },\r\n        {\r\n          name: '本月收藏订单',\r\n          value: 234,\r\n          icon: 'star-on',\r\n          color: '#ffb980'\r\n        },\r\n        {\r\n          name: '本月未支付订单',\r\n          value: 1234,\r\n          icon: 's-goods',\r\n          color: '#5ab1ef'\r\n        },\r\n      ]\r\n    }\r\n  },\r\n  mounted() {\r\n    // getData().then((data) => {\r\n    getData().then(({ data }) => {\r\n      // console.log(data)\r\n      const { tableData } = data.data\r\n      this.tableData = tableData\r\n      console.log(tableData)\r\n\r\n      // 基于准备好的dom，初始化echarts实例\r\n      const echarts1 = echarts.init(this.$refs.echarts1)\r\n      // 指定图表的配置项和数据\r\n      var echarts1Option = {}\r\n      // 处理数据xAxis\r\n      const { orderData,  } = data.data\r\n      const xAxis = Object.keys(orderData.data[0])\r\n      const xAxisData = {\r\n        data: xAxis\r\n      }\r\n      echarts1Option.xAxis = xAxisData\r\n      echarts1Option.legend = xAxisData\r\n      echarts1Option.yAxis = {}\r\n      // console.log(xAxis)\r\n      echarts1Option.series = []\r\n      // 配置series\r\n      xAxis.forEach(key => {\r\n        echarts1Option.series.push({\r\n          name: key,\r\n          // 折线图\r\n          type: 'line',\r\n          // key对应的orderData的所有值\r\n          data: orderData.data.map(item => item[key])\r\n        })\r\n      })\r\n      console.log(echarts1Option)\r\n      // 使用刚指定的配置项和数据显示图表\r\n      echarts1.setOption(echarts1Option);\r\n\r\n      // // 柱状图\r\n      // const echarts2 = echarts.init(this.$refs.echarts2)\r\n      // const echarts2Option  = {\r\n      //   legend: {\r\n      //     // 图例文字颜色\r\n      //     textStyle: {\r\n      //       color: \"#333\",\r\n      //     },\r\n      //   },\r\n      //   grid: {\r\n      //     left: \"20%\"\r\n      //   },\r\n      //   // 提示框\r\n      //   tooltip: {\r\n      //     trigger: \"axis\",\r\n      //   },\r\n      //   xAxis: {\r\n      //     type: \"category\", // 类目轴\r\n      //     data: userData.map(item => item.date),\r\n      //     axisLine: {\r\n      //       lineStyle: {\r\n      //         color: \"#17b3a3\",\r\n      //       },\r\n      //     },\r\n      //     axisLabel: {\r\n      //         interval: 0,\r\n      //         color: \"#333\",\r\n      //     },\r\n      //   },\r\n      //   yAxis: [\r\n      //     {\r\n      //       type: \"value\",\r\n      //       axisLine: {\r\n      //         lineStyle: {\r\n      //           color: \"#17b3a3\",\r\n      //         },\r\n      //       },\r\n      //     },\r\n      //   ],\r\n      //   color: [\"#2ec7c9\", \"#b6a2de\"],\r\n      //   series: [\r\n      //     {\r\n      //       name: \"新增用户\",\r\n      //       data: userData.map(item => item.new),\r\n      //       // 类型:bar是柱状图 \r\n      //       type: \"bar\",\r\n      //     },\r\n      //     {\r\n      //       name: \"活跃用户\",\r\n      //       data: userData.map(item => item.active),\r\n      //       type: \"bar\",\r\n      //     }\r\n      //   ],\r\n      // }\r\n      // echarts2.setOption(echarts2Option);\r\n    })\r\n  }\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.user {\r\n  display: flex;\r\n  align-items: center;\r\n  padding-bottom: 10px;\r\n  margin-bottom: 10px;\r\n  border-bottom: 1px solid #ccc;\r\n  img {\r\n    width: 120px;\r\n    height: 120px;\r\n    border-radius: 50%;\r\n    margin-right: 40px;\r\n  }\r\n  .userinfo {\r\n    .name {\r\n      font-size: 32px;\r\n      margin-bottom: 10px;\r\n    }\r\n    .access {\r\n      color: #999999;\r\n    }\r\n  }\r\n}\r\n\r\n.login-info {\r\n  p {\r\n      line-height: 20px;\r\n      font-size: 14px;\r\n      color: #999999;\r\n      span {\r\n        color: #666666;\r\n        margin-left: 60px;\r\n      }\r\n  }\r\n}\r\n.num {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  margin-left: 20px;\r\n  .el-card {\r\n      width: 32%;\r\n      margin-bottom: 20px;\r\n      .icon {\r\n        width: 80px;\r\n        height: 80px;\r\n        font-size: 30px;\r\n        text-align: center;\r\n        line-height: 80px;\r\n        color: #fff;\r\n      }\r\n      .detail {\r\n        margin-left: 15px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        .price {\r\n          font-size: 30px;\r\n          margin-bottom: 10px;\r\n          line-height: 30px;\r\n          height: 30px;\r\n        }\r\n        .desc {\r\n          font-size: 14px;\r\n          color: #999;\r\n          text-align: center;\r\n        }\r\n      }\r\n  } \r\n}\r\n.graph {\r\n    display: flex;\r\n    // 两个靠边\r\n    justify-content: space-between;\r\n    margin-top: 20px;\r\n    .el-card {\r\n      width: 48%;\r\n    }\r\n}\r\n</style>"],"mappings":";AAmEA,SAAAA,OAAA;AACA,YAAAC,OAAA;AACA;EACAC,KAAA;IACA;MACAC,SAAA;MACAC,UAAA;QACAC,IAAA;QACAC,QAAA;QACAC,QAAA;QACAC,QAAA;MACA;MACAC,SAAA,GACA;QACAJ,IAAA;QACAK,KAAA;QACAC,IAAA;QACAC,KAAA;MACA,GACA;QACAP,IAAA;QACAK,KAAA;QACAC,IAAA;QACAC,KAAA;MACA,GACA;QACAP,IAAA;QACAK,KAAA;QACAC,IAAA;QACAC,KAAA;MACA,GACA;QACAP,IAAA;QACAK,KAAA;QACAC,IAAA;QACAC,KAAA;MACA,GACA;QACAP,IAAA;QACAK,KAAA;QACAC,IAAA;QACAC,KAAA;MACA,GACA;QACAP,IAAA;QACAK,KAAA;QACAC,IAAA;QACAC,KAAA;MACA;IAEA;EACA;EACAC,QAAA;IACA;IACAb,OAAA,GAAAc,IAAA;MAAAZ;IAAA;MACA;MACA;QAAAC;MAAA,IAAAD,IAAA,CAAAA,IAAA;MACA,KAAAC,SAAA,GAAAA,SAAA;MACAY,OAAA,CAAAC,GAAA,CAAAb,SAAA;;MAEA;MACA,MAAAc,QAAA,GAAAhB,OAAA,CAAAiB,IAAA,MAAAC,KAAA,CAAAF,QAAA;MACA;MACA,IAAAG,cAAA;MACA;MACA;QAAAC;MAAA,IAAAnB,IAAA,CAAAA,IAAA;MACA,MAAAoB,KAAA,GAAAC,MAAA,CAAAC,IAAA,CAAAH,SAAA,CAAAnB,IAAA;MACA,MAAAuB,SAAA;QACAvB,IAAA,EAAAoB;MACA;MACAF,cAAA,CAAAE,KAAA,GAAAG,SAAA;MACAL,cAAA,CAAAM,MAAA,GAAAD,SAAA;MACAL,cAAA,CAAAO,KAAA;MACA;MACAP,cAAA,CAAAQ,MAAA;MACA;MACAN,KAAA,CAAAO,OAAA,CAAAC,GAAA;QACAV,cAAA,CAAAQ,MAAA,CAAAG,IAAA;UACA1B,IAAA,EAAAyB,GAAA;UACA;UACAE,IAAA;UACA;UACA9B,IAAA,EAAAmB,SAAA,CAAAnB,IAAA,CAAA+B,GAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAJ,GAAA;QACA;MACA;MACAf,OAAA,CAAAC,GAAA,CAAAI,cAAA;MACA;MACAH,QAAA,CAAAkB,SAAA,CAAAf,cAAA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}