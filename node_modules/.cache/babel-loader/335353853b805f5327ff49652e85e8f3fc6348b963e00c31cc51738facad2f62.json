{"ast":null,"code":"import Mock from 'mockjs';\nexport default {\n  getMenu: config => {\n    const {\n      username,\n      password\n    } = JSON.parse(config.body);\n    // 先判断用户是否存在\n    // 判断账号和密码是否对应\n    if (username === 'admin' && password === 'admin') {\n      return {\n        code: 20000,\n        data: {\n          menu: [{\n            path: '/',\n            name: 'home',\n            label: '首页',\n            icon: 's-home',\n            url: 'home/index'\n          }, {\n            path: '/mall',\n            name: 'mall',\n            label: '商品管理',\n            icon: 'video-play',\n            url: 'mall/index'\n          }, {\n            path: '/user',\n            name: 'user',\n            label: '用户管理',\n            icon: 'user',\n            url: 'User/index'\n          }, {\n            label: '其他',\n            icon: 'location',\n            children: [{\n              path: '/page1',\n              name: 'page1',\n              label: '页面1',\n              icon: 'setting',\n              url: 'other/PageOne'\n            }, {\n              path: '/page2',\n              name: 'page2',\n              label: '页面2',\n              icon: 'setting',\n              url: 'other/PageTwo'\n            }]\n          }],\n          token: Mock.Random.guid(),\n          message: '获取成功'\n        }\n      };\n    } else if (username === 'wang' && password === 'wang') {\n      return {\n        code: 20000,\n        data: {\n          menu: [{\n            path: '/home',\n            name: 'home',\n            label: '首页',\n            icon: 's-home',\n            url: 'home/index'\n          }, {\n            path: '/video',\n            name: 'video',\n            label: '商品管理',\n            icon: 'video-play',\n            url: 'mall/index'\n          }],\n          token: Mock.Random.guid(),\n          message: '获取成功'\n        }\n      };\n    } else {\n      return {\n        code: -999,\n        data: {\n          message: '密码错误'\n        }\n      };\n    }\n  }\n};","map":{"version":3,"names":["Mock","getMenu","config","username","password","JSON","parse","body","code","data","menu","path","name","label","icon","url","children","token","Random","guid","message"],"sources":["D:/git/vue2-admin-site/src/api/mockServeData/permission.js"],"sourcesContent":["import Mock from 'mockjs'\r\nexport default {\r\n    getMenu: config => {\r\n        const { username, password } = JSON.parse(config.body)\r\n        // 先判断用户是否存在\r\n        // 判断账号和密码是否对应\r\n        if (username === 'admin' && password === 'admin') {\r\n            return {\r\n                code: 20000,\r\n                data: {\r\n                    menu: [\r\n                        {\r\n                            path: '/',\r\n                            name: 'home',\r\n                            label: '首页',\r\n                            icon: 's-home',\r\n                            url: 'home/index'\r\n                        },\r\n                        {\r\n                            path: '/mall',\r\n                            name: 'mall',\r\n                            label: '商品管理',\r\n                            icon: 'video-play',\r\n                            url: 'mall/index'\r\n                        },\r\n                        {\r\n                            path: '/user',\r\n                            name: 'user',\r\n                            label: '用户管理',\r\n                            icon: 'user',\r\n                            url: 'User/index'\r\n                        },\r\n                        {\r\n                            label: '其他',\r\n                            icon: 'location',\r\n                            children: [\r\n                                {\r\n                                    path: '/page1',\r\n                                    name: 'page1',\r\n                                    label: '页面1',\r\n                                    icon: 'setting',\r\n                                    url: 'other/PageOne'\r\n                                },\r\n                                {\r\n                                    path: '/page2',\r\n                                    name: 'page2',\r\n                                    label: '页面2',\r\n                                    icon: 'setting',\r\n                                    url: 'other/PageTwo'\r\n                                }\r\n                            ]\r\n                        }\r\n                    ],\r\n                    token: Mock.Random.guid(),\r\n                    message: '获取成功'\r\n                }\r\n            }\r\n        } else if (username === 'wang' && password === 'wang') {\r\n            return {\r\n                code: 20000,\r\n                data: {\r\n                    menu: [\r\n                        {\r\n                            path: '/home',\r\n                            name: 'home',\r\n                            label: '首页',\r\n                            icon: 's-home',\r\n                            url: 'home/index'\r\n                        },\r\n                        {\r\n                            path: '/video',\r\n                            name: 'video',\r\n                            label: '商品管理',\r\n                            icon: 'video-play',\r\n                            url: 'mall/index'\r\n                        }\r\n                    ],\r\n                    token: Mock.Random.guid(),\r\n                    message: '获取成功'\r\n                }\r\n            }\r\n        } else {\r\n            return {\r\n                code: -999,\r\n                data: {\r\n                    message: '密码错误'\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,IAAI,MAAM,QAAQ;AACzB,eAAe;EACXC,OAAO,EAAEC,MAAM,IAAI;IACf,MAAM;MAAEC,QAAQ;MAAEC;IAAS,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACJ,MAAM,CAACK,IAAI,CAAC;IACtD;IACA;IACA,IAAIJ,QAAQ,KAAK,OAAO,IAAIC,QAAQ,KAAK,OAAO,EAAE;MAC9C,OAAO;QACHI,IAAI,EAAE,KAAK;QACXC,IAAI,EAAE;UACFC,IAAI,EAAE,CACF;YACIC,IAAI,EAAE,GAAG;YACTC,IAAI,EAAE,MAAM;YACZC,KAAK,EAAE,IAAI;YACXC,IAAI,EAAE,QAAQ;YACdC,GAAG,EAAE;UACT,CAAC,EACD;YACIJ,IAAI,EAAE,OAAO;YACbC,IAAI,EAAE,MAAM;YACZC,KAAK,EAAE,MAAM;YACbC,IAAI,EAAE,YAAY;YAClBC,GAAG,EAAE;UACT,CAAC,EACD;YACIJ,IAAI,EAAE,OAAO;YACbC,IAAI,EAAE,MAAM;YACZC,KAAK,EAAE,MAAM;YACbC,IAAI,EAAE,MAAM;YACZC,GAAG,EAAE;UACT,CAAC,EACD;YACIF,KAAK,EAAE,IAAI;YACXC,IAAI,EAAE,UAAU;YAChBE,QAAQ,EAAE,CACN;cACIL,IAAI,EAAE,QAAQ;cACdC,IAAI,EAAE,OAAO;cACbC,KAAK,EAAE,KAAK;cACZC,IAAI,EAAE,SAAS;cACfC,GAAG,EAAE;YACT,CAAC,EACD;cACIJ,IAAI,EAAE,QAAQ;cACdC,IAAI,EAAE,OAAO;cACbC,KAAK,EAAE,KAAK;cACZC,IAAI,EAAE,SAAS;cACfC,GAAG,EAAE;YACT,CAAC;UAET,CAAC,CACJ;UACDE,KAAK,EAAEjB,IAAI,CAACkB,MAAM,CAACC,IAAI,CAAC,CAAC;UACzBC,OAAO,EAAE;QACb;MACJ,CAAC;IACL,CAAC,MAAM,IAAIjB,QAAQ,KAAK,MAAM,IAAIC,QAAQ,KAAK,MAAM,EAAE;MACnD,OAAO;QACHI,IAAI,EAAE,KAAK;QACXC,IAAI,EAAE;UACFC,IAAI,EAAE,CACF;YACIC,IAAI,EAAE,OAAO;YACbC,IAAI,EAAE,MAAM;YACZC,KAAK,EAAE,IAAI;YACXC,IAAI,EAAE,QAAQ;YACdC,GAAG,EAAE;UACT,CAAC,EACD;YACIJ,IAAI,EAAE,QAAQ;YACdC,IAAI,EAAE,OAAO;YACbC,KAAK,EAAE,MAAM;YACbC,IAAI,EAAE,YAAY;YAClBC,GAAG,EAAE;UACT,CAAC,CACJ;UACDE,KAAK,EAAEjB,IAAI,CAACkB,MAAM,CAACC,IAAI,CAAC,CAAC;UACzBC,OAAO,EAAE;QACb;MACJ,CAAC;IACL,CAAC,MAAM;MACH,OAAO;QACHZ,IAAI,EAAE,CAAC,GAAG;QACVC,IAAI,EAAE;UACFW,OAAO,EAAE;QACb;MACJ,CAAC;IACL;EAEJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}