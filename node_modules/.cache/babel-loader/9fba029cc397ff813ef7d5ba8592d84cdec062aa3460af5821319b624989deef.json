{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Mock from 'mockjs';\n\n// get请求从config.url获取参数，post从config.body中获取参数\nfunction param2Obj(url) {\n  const search = url.split('?')[1];\n  if (!search) {\n    return {};\n  }\n  return JSON.parse('{\"' + decodeURIComponent(search).replace(/\"/g, '\\\\\"').replace(/&/g, '\",\"').replace(/=/g, '\":\"') + '\"}');\n}\nlet List = [];\nconst count = 200;\nfor (let i = 0; i < count; i++) {\n  List.push(Mock.mock({\n    id: Mock.Random.guid(),\n    name: Mock.Random.cname(),\n    addr: Mock.mock('@county(true)'),\n    'age|18-60': 1,\n    birth: Mock.Random.date(),\n    sex: Mock.Random.integer(0, 1)\n  }));\n}\nexport default {\n  /**\r\n   * 获取列表\r\n   * 要带参数 name, page, limt; name可以不填, page,limit有默认值。\r\n   * @param name, page, limit\r\n   * @return {{code: number, count: number, data: *[]}}\r\n   */\n  getUserList: config => {\n    const {\n      name,\n      page = 1,\n      limit = 20\n    } = param2Obj(config.url);\n    console.log('name:' + name, 'page:' + page, '分页大小limit:' + limit);\n    const mockList = List.filter(user => {\n      if (name && user.name.indexOf(name) === -1 && user.addr.indexOf(name) === -1) return false;\n      return true;\n    });\n    const pageList = mockList.filter((item, index) => index < limit * page && index >= limit * (page - 1));\n    return {\n      code: 20000,\n      count: mockList.length,\n      list: pageList\n    };\n  },\n  /**\r\n   * 增加用户\r\n   * @param name, addr, age, birth, sex\r\n   * @return {{code: number, data: {message: string}}}\r\n   */\n  createUser: config => {\n    const {\n      name,\n      addr,\n      age,\n      birth,\n      sex\n    } = JSON.parse(config.body);\n    console.log(JSON.parse(config.body));\n    List.unshift({\n      id: Mock.Random.guid(),\n      name: name,\n      addr: addr,\n      age: age,\n      birth: birth,\n      sex: sex\n    });\n    return {\n      code: 20000,\n      data: {\n        message: '添加成功'\n      }\n    };\n  },\n  /**\r\n   * 删除用户\r\n   * @param id\r\n   * @return {*}\r\n   */\n  deleteUser: config => {\n    const {\n      id\n    } = JSON.parse(config.body);\n    if (!id) {\n      return {\n        code: -999,\n        message: '参数不正确'\n      };\n    } else {\n      List = List.filter(u => u.id !== id);\n      return {\n        code: 20000,\n        message: '删除成功'\n      };\n    }\n  },\n  /**\r\n   * 批量删除\r\n   * @param config\r\n   * @return {{code: number, data: {message: string}}}\r\n   */\n  batchremove: config => {\n    let {\n      ids\n    } = param2Obj(config.url);\n    ids = ids.split(',');\n    List = List.filter(u => !ids.includes(u.id));\n    return {\n      code: 20000,\n      data: {\n        message: '批量删除成功'\n      }\n    };\n  },\n  /**\r\n   * 修改用户\r\n   * @param id, name, addr, age, birth, sex\r\n   * @return {{code: number, data: {message: string}}}\r\n   */\n  updateUser: config => {\n    const {\n      id,\n      name,\n      addr,\n      age,\n      birth,\n      sex\n    } = JSON.parse(config.body);\n    const sex_num = parseInt(sex);\n    List.some(u => {\n      if (u.id === id) {\n        u.name = name;\n        u.addr = addr;\n        u.age = age;\n        u.birth = birth;\n        u.sex = sex_num;\n        return true;\n      }\n    });\n    return {\n      code: 20000,\n      data: {\n        message: '编辑成功'\n      }\n    };\n  }\n};","map":{"version":3,"names":["Mock","param2Obj","url","search","split","JSON","parse","decodeURIComponent","replace","List","count","i","push","mock","id","Random","guid","name","cname","addr","birth","date","sex","integer","getUserList","config","page","limit","console","log","mockList","filter","user","indexOf","pageList","item","index","code","length","list","createUser","age","body","unshift","data","message","deleteUser","u","batchremove","ids","includes","updateUser","sex_num","parseInt","some"],"sources":["D:/git/vue2-admin-site/src/api/mockServeData/user.js"],"sourcesContent":["import Mock from 'mockjs'\r\n\r\n// get请求从config.url获取参数，post从config.body中获取参数\r\nfunction param2Obj (url) {\r\n  const search = url.split('?')[1]\r\n  if (!search) {\r\n    return {}\r\n  }\r\n  return JSON.parse(\r\n    '{\"' +\r\n    decodeURIComponent(search)\r\n      .replace(/\"/g, '\\\\\"')\r\n      .replace(/&/g, '\",\"')\r\n      .replace(/=/g, '\":\"') +\r\n    '\"}'\r\n  )\r\n}\r\n\r\nlet List = []\r\nconst count = 200\r\n\r\nfor (let i = 0; i < count; i++) {\r\n  List.push(\r\n    Mock.mock({\r\n      id: Mock.Random.guid(),\r\n      name: Mock.Random.cname(),\r\n      addr: Mock.mock('@county(true)'),\r\n      'age|18-60': 1,\r\n      birth: Mock.Random.date(),\r\n      sex: Mock.Random.integer(0, 1)\r\n    })\r\n  )\r\n}\r\n\r\nexport default {\r\n  /**\r\n   * 获取列表\r\n   * 要带参数 name, page, limt; name可以不填, page,limit有默认值。\r\n   * @param name, page, limit\r\n   * @return {{code: number, count: number, data: *[]}}\r\n   */\r\n  getUserList: config => {\r\n    const { name, page = 1, limit = 20 } = param2Obj(config.url)\r\n    console.log('name:' + name, 'page:' + page, '分页大小limit:' + limit)\r\n    const mockList = List.filter(user => {\r\n      if (name && user.name.indexOf(name) === -1 && user.addr.indexOf(name) === -1) return false\r\n      return true\r\n    })\r\n    const pageList = mockList.filter((item, index) => index < limit * page && index >= limit * (page - 1))\r\n    return {\r\n      code: 20000,\r\n      count: mockList.length,\r\n      list: pageList\r\n    }\r\n  },\r\n  /**\r\n   * 增加用户\r\n   * @param name, addr, age, birth, sex\r\n   * @return {{code: number, data: {message: string}}}\r\n   */\r\n  createUser: config => {\r\n    const { name, addr, age, birth, sex } = JSON.parse(config.body)\r\n    console.log(JSON.parse(config.body))\r\n    List.unshift({\r\n      id: Mock.Random.guid(),\r\n      name: name,\r\n      addr: addr,\r\n      age: age,\r\n      birth: birth,\r\n      sex: sex\r\n    })\r\n    return {\r\n      code: 20000,\r\n      data: {\r\n        message: '添加成功'\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 删除用户\r\n   * @param id\r\n   * @return {*}\r\n   */\r\n  deleteUser: config => {\r\n    const { id } = JSON.parse(config.body)\r\n    if (!id) {\r\n      return {\r\n        code: -999,\r\n        message: '参数不正确'\r\n      }\r\n    } else {\r\n      List = List.filter(u => u.id !== id)\r\n      return {\r\n        code: 20000,\r\n        message: '删除成功'\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 批量删除\r\n   * @param config\r\n   * @return {{code: number, data: {message: string}}}\r\n   */\r\n  batchremove: config => {\r\n    let { ids } = param2Obj(config.url)\r\n    ids = ids.split(',')\r\n    List = List.filter(u => !ids.includes(u.id))\r\n    return {\r\n      code: 20000,\r\n      data: {\r\n        message: '批量删除成功'\r\n      }\r\n    }\r\n  },\r\n  /**\r\n   * 修改用户\r\n   * @param id, name, addr, age, birth, sex\r\n   * @return {{code: number, data: {message: string}}}\r\n   */\r\n  updateUser: config => {\r\n    const { id, name, addr, age, birth, sex } = JSON.parse(config.body)\r\n    const sex_num = parseInt(sex)\r\n    List.some(u => {\r\n      if (u.id === id) {\r\n        u.name = name\r\n        u.addr = addr\r\n        u.age = age\r\n        u.birth = birth\r\n        u.sex = sex_num\r\n        return true\r\n      }\r\n    })\r\n    return {\r\n      code: 20000,\r\n      data: {\r\n        message: '编辑成功'\r\n      }\r\n    }\r\n  }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}